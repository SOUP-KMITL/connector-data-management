swagger: '2.0'
info:
  description: >-
    This is a sample server Petstore server.  You can find out more about    
    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,
    #swagger](http://swagger.io/irc/).      For this sample, you can use the api
    key `special-key` to test the authorization     filters.
  version: 1.0.0
  title: API Connector Management
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: api.smartcity.kmitl.io
basePath: /api/v1
tags:
  - name: data
    description: API Connector Data's Management
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: user
    description: API Connector User's Management
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
schemes:
  - https
paths:
  /data:
    post:
      tags:
        - data
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: trackData
      produces:
        - application/xml
        - application/json
      parameters:
        - name: user
          in: header
          description: user of a connector
          required: false
          type: string
        - name: Authorization
          in: header
          description: Authorizaion of the user
          required: false
          type: string
        - name: collectionId
          in: header
          description: collectionId of a collection
          required: false
          type: string
        - in: body
          name: data
          description: Data to track
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: Data
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: User
  '/user/{username}':
    get:
      tags:
        - user
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
      x-swagger-router-controller: User
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
      x-swagger-router-controller: User
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
      x-swagger-router-controller: User
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:pets': modify pets in your account
      'read:pets': read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  User:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      connectorId:
        type: string
    xml:
      name: User
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
